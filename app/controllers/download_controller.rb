# Controller to download the CSV generated by the active admin
require 'csv'
require 'open-uri'

class DownloadController < ApplicationController
  before_action :authenticate_admin_user!

  def download_playlist_song_data
    PlaylistSongDownloadWorkerWorker.perform_async
    redirect_to admin_playlists_path
    flash[:success] = "CSV uploaded to S3"
  end

  def download_songs_in_playlist
    playlist_id = params[:id]
    playlist_name = Playlist.find(playlist_id).name
    require "csv"
    respond_to do |format|
      format.html
      format.xls { send_data Song.song_in_playlist_csv(col_sep: "\t", id: playlist_id), filename: "songs_in_playlist_#{playlist_name}.csv" }
    end
  end

  def upload_csv
    s3 = Aws::S3::Resource.new
    bucket = s3.bucket(Rails.configuration.aws[:csv_bucket])
    file = params[:data]
    obj = bucket.object("uploaded_song_data.csv")
    obj.put(body: file, acl: "public-read", content_type: "text/csv")
    SongCsvUploadWorker.perform_async()
  end

  def upload_playlist_csv
    s3 = Aws::S3::Resource.new
    bucket = s3.bucket(Rails.configuration.aws[:csv_bucket])
    file = params[:data]
    obj = bucket.object("uploaded_playlist_song_data.csv")
    obj.put(body: file, acl: "public-read", content_type: "text/csv")
    PlaylistSongUploadWorkerWorker.perform_async()
  end

  def player_guess_history
    player_guesses_histogram = Account.find(params[:id]).song_history
    require "csv"
    rows = []
    col_names = ["Song ID", "Total Score", "Song Title", "User Name", "Game ID", "Started At"]
    player_guesses_history_csv = CSV.generate do |csv|
        csv << col_names
        player_guesses_histogram.each do |sh|
          rows << sh[0]
          rows << sh[1]
          rows << sh[2]
          rows << sh[3]
          rows << sh[4]
          rows << sh[5]
          csv << rows
          rows = []
        end
    end
    send_data(player_guesses_history_csv, :type => 'text/csv', :filename => 'Player_guesses.csv')
  end

  def all_player_guess_history
    require "csv"
    rows = []
    col_names = ["Account ID", "Email", "Last Sing In At", "Sing In Count", "Song ID", "Total Score", "Song Title", "Song Artist", "Song year", "Song Genre", "User Name", "Game ID", "Game Code", "Started At"]
    all_player_guesses_history_csv = CSV.generate do |csv|
      csv << col_names
      Account.all.each do |ac|
        ac.song_history.each do |sh|
          rows << ac[:id]
          rows << ac[:email]
          rows << ac[:last_sign_in_at]
          rows << ac[:sign_in_count]
          rows << sh[0]
          rows << sh[1]
          rows << sh[2]
          rows << sh[3]
          rows << sh[4]
          rows << sh[5]
          rows << sh[6]
          rows << sh[7]
          rows << sh[8]
          rows << sh[9]
          csv << rows
          rows = []
        end
      end
    end
    send_data(all_player_guesses_history_csv, :type => 'text/csv', :filename => 'All_player_history.csv')
  end


  def all_player_trivia_answers
    require "csv"
    rows = []
    col_names = ["Account ID", "Player Name", "Email", "Game Code", "Question No", "Trivia Answer"]
    all_player_trivia_answers_csv = CSV.generate do |csv|
      csv << col_names
      Game.find_by_code(params[:game_code])&.players.each do |player|
        player.player_answers.each do |pa|
          rows << player[:account_id]
          rows << player[:name]
          rows << player[:email]
          rows << params[:game_code]
          rows << pa[:question_number]
          rows << pa[:answer]
          csv << rows
          rows = []
        end
      end
    end
    send_data(all_player_trivia_answers_csv, :type => 'text/csv', :filename => 'all_player_trivia_answers.csv')
  end

  def download_song_data
    SongCsvDownloadWorker.perform_async
    redirect_to admin_songs_path
    flash[:success] = "CSV uploaded to S3"
  end

end
